{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/formly-custom-elements/f-autocomplete/f-autocomplete.component.ts","./src/app/formly-custom-elements/f-autocomplete/f-autocomplete.component.html","./src/app/formly-custom-elements/f-checkbox/f-checkbox.component.ts","./src/app/formly-custom-elements/f-checkbox/f-checkbox.component.html","./src/app/formly-custom-elements/f-datepicker/f-datepicker.component.ts","./src/app/formly-custom-elements/f-datepicker/f-datepicker.component.html","./src/app/formly-custom-elements/f-radio/f-radio.component.ts","./src/app/formly-custom-elements/f-radio/f-radio.component.html","./src/app/formly-custom-elements/f-range-datepicker/f-range-datepicker.component.ts","./src/app/formly-custom-elements/f-range-datepicker/f-range-datepicker.component.html","./src/app/formly-custom-elements/f-select/f-select.component.ts","./src/app/formly-custom-elements/f-select/f-select.component.html","./src/app/formly-custom-elements/f-slide-toggle/f-slide-toggle.component.ts","./src/app/formly-custom-elements/f-slide-toggle/f-slide-toggle.component.html","./src/app/formly-custom-elements/f-textarea/f-textarea.component.ts","./src/app/formly-custom-elements/f-textarea/f-textarea.component.html","./src/app/formly-custom-elements/f-toggle/f-toggle.component.ts","./src/app/formly-custom-elements/f-toggle/f-toggle.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./main/main.module').then((m) => m.MainModule),\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FSelectComponent } from './formly-custom-elements/f-select/f-select.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NGX_HIGHLIGHT_JS_DEFAULT_THEME, NgxHighlightJsModule } from '@nowzoo/ngx-highlight-js';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FAutocompleteComponent } from './formly-custom-elements/f-autocomplete/f-autocomplete.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { FCheckboxComponent } from './formly-custom-elements/f-checkbox/f-checkbox.component';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyMaterialModule } from '@ngx-formly/material';\nimport { FDatepickerComponent } from './formly-custom-elements/f-datepicker/f-datepicker.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FRangeDatepickerComponent } from './formly-custom-elements/f-range-datepicker/f-range-datepicker.component';\nimport { FRadioComponent } from './formly-custom-elements/f-radio/f-radio.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FTextareaComponent } from './formly-custom-elements/f-textarea/f-textarea.component';\nimport { FToggleComponent } from './formly-custom-elements/f-toggle/f-toggle.component';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { FSlideToggleComponent } from './formly-custom-elements/f-slide-toggle/f-slide-toggle.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FSelectComponent,\n    FAutocompleteComponent,\n    FCheckboxComponent,\n    FDatepickerComponent,\n    FRangeDatepickerComponent,\n    FRadioComponent,\n    FTextareaComponent,\n    FToggleComponent,\n    FSlideToggleComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    FormsModule,\n    MatFormFieldModule,\n    NgxHighlightJsModule.forRoot(),\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot(),\n    FormlyModule.forRoot({extras: {lazyRender: true}}),\n    FormlyMaterialModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-f-autocomplete',\n  templateUrl: './f-autocomplete.component.html',\n  styleUrls: ['./f-autocomplete.component.scss']\n})\nexport class FAutocompleteComponent implements OnInit {\n\n  myControl = new FormControl();\n  options: string[] = ['One', 'Two', 'Three'];\n\n  filteredOptions: Observable<string[]>;\n\n  constructor() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  ngOnInit() {\n\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n}\n","<mat-form-field class=\"example-full-width\" appearance=\"outline\">\n  <mat-label>Autocomlete example</mat-label>\n  <input type=\"text\"\n         placeholder=\"Pick one\"\n         aria-label=\"Number\"\n         matInput\n         [formControl]=\"myControl\"\n         [matAutocomplete]=\"auto\">\n  <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n      {{option}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-f-checkbox',\n  templateUrl: './f-checkbox.component.html',\n  styleUrls: ['./f-checkbox.component.scss']\n})\nexport class FCheckboxComponent implements OnInit {\n\n  checked = false;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-f-datepicker',\n  templateUrl: './f-datepicker.component.html',\n  styleUrls: ['./f-datepicker.component.scss']\n})\nexport class FDatepickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-form-field appearance=\"outline\" class=\"w100\">\n  <mat-label>Datepicker</mat-label>\n  <input matInput [matDatepicker]=\"picker\">\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-f-radio',\n  templateUrl: './f-radio.component.html',\n  styleUrls: ['./f-radio.component.scss']\n})\nexport class FRadioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-radio-group class=\"d-flex flex-column\" aria-label=\"Select an option\">\n  <mat-radio-button class=\"mb16\" value=\"1\">Option 1</mat-radio-button>\n  <mat-radio-button class=\"mb16\" value=\"2\">Option 2</mat-radio-button>\n  <mat-radio-button class=\"mb16\" value=\"3\">Option 3</mat-radio-button>\n</mat-radio-group>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-f-range-datepicker',\n  templateUrl: './f-range-datepicker.component.html',\n  styleUrls: ['./f-range-datepicker.component.scss']\n})\nexport class FRangeDatepickerComponent implements OnInit {\n\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl()\n  });\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-form-field appearance=\"outline\" class=\"w100\">\n  <mat-label>Range date-picker</mat-label>\n  <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n    <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\n    <input matEndDate formControlName=\"end\" placeholder=\"End date\">\n  </mat-date-range-input>\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-date-range-picker #picker></mat-date-range-picker>\n\n  <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\n  <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\n</mat-form-field>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-f-select',\n  templateUrl: './f-select.component.html',\n  styleUrls: ['./f-select.component.scss']\n})\nexport class FSelectComponent implements OnInit {\n  selected = '';\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-form-field appearance=\"outline\" class=\"w100\">\n  <mat-label>Select Example</mat-label>\n  <mat-select [(value)]=\"selected\">\n    <mat-option>None</mat-option>\n    <mat-option value=\"option1\">Option 1</mat-option>\n    <mat-option value=\"option2\">Option 2</mat-option>\n    <mat-option value=\"option3\">Option 3</mat-option>\n  </mat-select>\n</mat-form-field>\n","import { Component, OnInit } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-f-slide-toggle',\n  templateUrl: './f-slide-toggle.component.html',\n  styleUrls: ['./f-slide-toggle.component.scss']\n})\nexport class FSlideToggleComponent implements OnInit {\n\n  color: ThemePalette = 'accent';\n  checked = false;\n  disabled = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-slide-toggle\n  class=\"example-margin\"\n  [color]=\"color\"\n  [checked]=\"checked\"\n  [disabled]=\"disabled\">\n  Slide me!\n</mat-slide-toggle>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-f-textarea',\n  templateUrl: './f-textarea.component.html',\n  styleUrls: ['./f-textarea.component.scss']\n})\nexport class FTextareaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-form-field  appearance=\"outline\" class=\"w100\">\n  <mat-label>Textarea</mat-label>\n  <textarea matInput\n            cdkTextareaAutosize\n            #autosize=\"cdkTextareaAutosize\"\n            cdkAutosizeMinRows=\"5\"\n            cdkAutosizeMaxRows=\"5\"></textarea>\n</mat-form-field>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-f-toggle',\n  templateUrl: './f-toggle.component.html',\n  styleUrls: ['./f-toggle.component.scss']\n})\nexport class FToggleComponent implements OnInit {\n  fontStyleControl = new FormControl();\n  fontStyle?: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-button-toggle-group [formControl]=\"fontStyleControl\" class=\"w100\">\n  <mat-button-toggle class=\"f-gr-1\" value=\"bold\">Bold</mat-button-toggle>\n  <mat-button-toggle class=\"f-gr-1\" value=\"italic\">Italic</mat-button-toggle>\n  <mat-button-toggle class=\"f-gr-1\" value=\"underline\">Underline</mat-button-toggle>\n</mat-button-toggle-group>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}